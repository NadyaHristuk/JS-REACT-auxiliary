WEBVTT

00:00.940 --> 00:05.650
This lesson we're gonna be adding in more of that listeners and these are gonna be the key press event

00:05.650 --> 00:06.210
listeners.

00:06.220 --> 00:13.270
So whenever the player kicks passes a key on their keyboard it's going to invoke these key press functions.

00:13.270 --> 00:18.680
So setting up our document adding an event listener just as we would any other event listener and the

00:18.680 --> 00:22.540
event listener that we're listening for is key down.

00:22.600 --> 00:28.510
So anytime somebody presses on the keyboard and presses down on the keyboard when we're where they're

00:28.510 --> 00:34.530
located the focus is located within the document which is everywhere the whole page then we are going

00:34.530 --> 00:41.350
to be invoking our function we'll call it press on and then we're going to also do another one for press

00:41.440 --> 00:42.040
off.

00:42.040 --> 00:48.400
So we're gonna be able to detect once the player presses the key and then once they let go of the key

00:48.640 --> 00:55.140
and using key up method in order to accomplish that or press on function and we need to listen for the

00:55.150 --> 00:55.990
then to object.

00:55.990 --> 01:03.970
So we're passing that in as a variable e and we can also prevent the default action by using the javascript

01:03.970 --> 01:05.170
method prevent default.

01:05.170 --> 01:11.650
And I'm going to console log out the value of event key and within this event object we're passing quite

01:11.650 --> 01:18.040
a bit of information and we're gonna be making use of determining what Key was pressed when ever the

01:18.040 --> 01:19.750
key was off.

01:19.750 --> 01:25.690
And as well we're going to take the key that was last pressed and we're going to output that into key

01:25.690 --> 01:31.870
off and I'm going to comma separate the soda so that we can distinguish between the two functions.

01:31.870 --> 01:32.860
So let's try that out.

01:32.890 --> 01:40.900
So refresh and now whenever I press the key I can see that I've got key on and key off and what we want

01:40.900 --> 01:47.830
to do for this is we want to toggle a function that determines which way and which key is actually being

01:47.830 --> 01:53.270
pressed so that we can take some type of action depending on what key is pressed.

01:53.380 --> 01:59.530
And we also want to have the ability to press multiple keys at the same time and check to see what those

01:59.800 --> 02:02.040
keys are and how they're being invoked.

02:02.050 --> 02:07.630
So in case we have multiple keys or clear the suit and this time I'm going to press the up and the down

02:07.720 --> 02:12.190
at the same time and you see when I lift off of one and then I lift off of the other.

02:12.310 --> 02:18.880
We get that off function invoking and that's how we can detect whether the player is pressing one key

02:18.880 --> 02:26.500
to keys and depending on how many keys they've got pressed we can take the action accordingly.

02:26.530 --> 02:32.590
Set up an object to track which keys are being pressed and we're going to use the same values that we've

02:32.590 --> 02:38.380
got for the key names that we're seeing here being indicated within the console.

02:38.500 --> 02:45.250
So setting up an object and we're just going to check to see if the key is has a boolean value so whether

02:45.250 --> 02:49.780
it's pressed on or off and then we're going to take a cat actions accordingly.

02:49.780 --> 02:53.980
So using arrow up let's set that.

02:53.980 --> 02:59.500
So by default we're going to set them all to be false and this way we can handle multiple key presses

02:59.590 --> 03:00.760
at the same time.

03:00.850 --> 03:01.850
There's also arrow.

03:01.870 --> 03:02.700
Right.

03:02.710 --> 03:08.200
So a default for that of course false and then the last one that we're gonna be tracking.

03:08.260 --> 03:13.090
And if you can if you want to track additional key presses you can do that as well within this type

03:13.090 --> 03:13.850
of format.

03:13.930 --> 03:19.990
So you could track as many cues as you wanted to within this keys object lesson that we want to do is

03:20.230 --> 03:26.620
instead of tracking that the keys have been up and down we're going to simply take that key value from

03:26.620 --> 03:34.720
the event key and add within that key object setting the E key so corresponding to the string value

03:34.720 --> 03:39.960
of each key that we saw output within the console or set that value to be false.

03:39.960 --> 03:42.730
And we need to do the same thing for on click.

03:42.730 --> 03:44.020
So we've set it to be true.

03:44.020 --> 03:50.530
In this case you're going to see that now we're toggling between the boolean values and we know exactly

03:50.530 --> 03:52.120
which cues are being pressed.

03:52.120 --> 03:56.320
So while I'm pressing the up arrow I see that we've got up arrow true.

03:56.320 --> 03:59.430
If I'm pressing left Ariel with the left arrow is true.

03:59.470 --> 04:06.160
If I push another key so now I'm pushing the left and the right aerials so arrow right this true arrow

04:06.160 --> 04:13.240
left is true and we've got full control so we can have as many keys pressed as needed within our application

04:13.420 --> 04:15.970
and we can track all of the key presses.

04:15.970 --> 04:21.220
So go ahead and add this into your application add in the ability to track what keys are being pressed

04:21.460 --> 04:29.440
and also set up an object you can call it keys as well that tracks which keys are being pressed and

04:29.440 --> 04:33.580
coming up next I'm going to show you how to introduce gameplay and we'll create an object that will

04:33.580 --> 04:36.370
move around depending on what keys are pressed.
